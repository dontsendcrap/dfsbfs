#robo path planning 1 
import heapq 

def a_star(graph, start, goal, heuristic):
    pq=[]
    heapq.heappush(pq,(0+heuristic[start],0,start,[]))
    visited=set()
    while pq:
        hcost,cost,node,path = heapq.heappop(pq)
        
        if node==goal:
            newpath=path+[node]
            return cost,newpath

        if node not in visited:
            newpath=path+[node]
            visited.add(node)
            for adjnode,adjcost in graph[node].items():
                if adjnode not in visited:
                    heapq.heappush(pq,(cost+adjcost+heuristic[adjnode],cost+adjcost,adjnode,newpath))

    return -1

graph = {
 '11': {'12': 1, '21': 1,'22':1},
 '21': {'22': 1, '31': 1 , '11':1,'12':1,'32':1},
 '31': {'21': 1, '32': 1 , '41':1,'22':1,'42':1},
 '41': {'31': 1, '42': 1 ,'32':1},
 '12': {'11': 1, '13': 1 , '22':1,'21':1,'23':1},
 '22': {'21': 1, '22': 1 , '12':1,'11':1,'31':1},
 '32': {'31': 1, '22': 1 , '42':1,'21':1,'41':1},
 '42': {'41': 1, '32': 1 ,'31':1},
 '13': {'12': 1, '14': 1 , '23':1,'22':1,'25':1},
 '23': { '13': 1 , '24':1 ,'33':1,'12':1,'14':1,'34':1},
 '33': {'23': 1, '34': 1 , '43':1,'24':1,'44':1},
 '43': {'33': 1, '44': 1 ,'34':1},
 '14': {'13': 1, '15': 1 , '24':1,'23':1,'26':1},
 '24': {'14': 1, '23': 1 , '25':1 , '34':1,'13':1,'33':1,'35':1},
 '34': {'33': 1, '24': 1 , '35':1 , '44':1,'23':1,'25':1,'43':1,'45':1},
 '44': {'43': 1, '34': 1 , '45':1 ,'33':1,'35':1},
 '15': {'14': 1, '16': 1 ,'24':1},
 '25': {'24': 1 , '26':1 , '35':1,'14':1,'34':1,'36':1},
 '35': {'34': 1, '25': 1 , '36':1 , '45':1,'24':1,'26':1,'46':1,'44':1},
 '45': {'44': 1, '35': 1 , '46':1 ,'34':1,'36':1},
 '16': {'15': 1},
 '26': {'25': 1, '36': 1 },
 '36': {'35': 1, '26': 1 , '46':1 ,'25':1,'45':1},
 '46': {'45': 1, '36': 1 ,'35':1},
}
heuristic={
'11':6,
 '12':5,
 '13':4,
 '14':3,
 '15':2,
 '16':3,
 '21':5,
 '22':4,
 '23':3,
 '24':2,
 '25':1,
 '26':2,
 '31':4,
 '32':3,
 '33':2,
 '34':1,
 '35':0,
 '36':1,
 '41':5,
 '42':4,
 '43':3,
 '44':2,
 '45':1,
 '46':2,
}
start_node = '32'
goal_node = '35'

cost,path=a_star(graph,start_node,goal_node,heuristic)
print(f'cost: {cost}')
print(f'path: {path}')
